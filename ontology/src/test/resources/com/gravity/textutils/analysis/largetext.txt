News apps: Are we doing it right?
This is officially the longest post I’ve ever written, and I hope not to repeat it. About 2500 words. I’m sorry. If that annoys you, well, it’s my blog. But when someone from the group of journos you expect to have a secure job..doesn’t–It calls everything into question. Here is the reaction to a wake-up call, questions about how we’re “saving journalism” and a reminder that none of us in life can afford to be complacent.
One of the journalists who practices his craft through Web development, one of my role models, Matt Waite, has been “terminated” from the St. Petersburg Times. I’m not worried about Matt, he’s got a full-time gig as a journalism professor at the University of Nebraska-Lincoln, and those students are one lucky bunch. Imagine going into a classroom as a j-student and working on interesting ways to tell stories, and saying “So, if I wanted to get more than 10 points on a map, and not do it manually, do you know who I’d talk to about that?” And while Matt could say, “Bow down to the Pulitzer I and my team got , partially due to my awesome data knowledge,” I think he’d just help. But he could be obnoxious. And it would still be okay. ‘Cause he’s Matt Waite and he’s done A TON to bring technology to newsrooms and push journalism forward. And he’s not obnoxious enough to write about it incessantly.  But I am.
More than just a virtual Twitterstream
I never had the opportunity to learn from him in a professional environment beyond little snippets, but let me explain why this affects me to my very core.
I took a CAR class, and after week 2, I asked Derek how he learned programming. He informs me that it was easier than the repetitive data entry he was doing before. Just a natural progression, the way he explained it.
But I wasn’t fully committed yet. Maybe he was just some crazy awesome genius who writes and codes and no one else does and who am I to think I can do that because after all he works for the NYT and worked for WaPo and I’m just some liberal arts major who landed in DC at the right time.
But by week 4, when Derek mentioned Matt in an email, then it changed from this weird person who taught my class to a legitimate option. After all, if one person’s doing something, it’s no story, but with a second person, you probably have a trend. I readjusted my journliasm goals, hoping to someday approach that level of work.
I watched videos of Matt speaking, interviewed him for Data Delvers, studied his posts. When he looked for feedback before he taught his first adjunct class at UNL, I wrote one of my first serious posts on this blog that had previously been languishing. And the first time I met Matt, I felt as if I’d known him for years, and it almost seemed like I was back in Derek’s class.  Similar and uncommon philosophies.
He told me the best advice he could give me was to listen to Derek, because he didn’t when Derek was rambling about this thing called a “weblog”.
When I built my first Django app and tweeted that I didn’t know how to select records between two numbers, he told me the answer was “range”. (duh)
I sat in on all his sessions at conferences, until he spotted me heading to one at ONA and told me “You’ve heard it all before, go do something useful.” (I went to his session anyway, I don’t take direction well.)
When I struggled over job decisions, he was frank, responsive and caring.
And always with a sense of humor.
And he can do all that as a professor, sure. But for some reason, it all meant even more because he was in the field at the same time.
I tell you all that because you’ve got to understand that to me, he’s not just a big name, not just someone I followed on Twitter, but his very career path and personality was an inspiration, he had it together, and there was no way he could be in danger of getting “terminated.”
What does it take to keep a j- job, if not skills, passion and a Pulitzer?
So, as for me, I worried that since I was no Matt Waite, I wouldn’t get a job doing this work, because, as one professor once said to me, “You can’t report and code, Michelle. You’re in journalism school.” I heard stories of my friends not getting jobs, getting them and losing them, getting jobs they hated. When they asked me why it just happened for me, I could say “It’s weird, but I think having development skills gives you some job security and accelerates your path.” I wonder what I’m lacking because I learned to be a reporter and coder at the same time; it’s not that I’m bring years of reporting to coding or vice versa. Does that make me weak? I still don’t know.
And if Matt wanted to move to full-time teaching, and leave the St. Pete Times, I wouldn’t be writing this. Him heading to academia isn’t the issue. But for someone of Matt’s caliber as a reporter, a developer, and (he’ll hate me for this) a journalistic innovator, for him not to not leave of his own accord…it just feels wrong. And I don’t place blame on his colleagues or management, I don’t know enough of the facts to make an assessment. If what we’re doing is so important, though, we should be essential to the business case of our news organizations. They should not have been able to make a choice to terminate Matt, who had reporting and development down solid, and did fascinating work on both ends. If he couldn’t stick, what does that say about us newbies? And more importantly, what can we do to fix it?
Are news apps forever destined to be sidecars?
Now, we get to the meat of the matter. I have a lot of friends who are news apps developers around the country, and I mean no disrespect with this next part. I’m just thinking out loud. Back in some year I was alive, but not old enough to understand databases, Adrian Holovaty started talking about journalism and data. Interactive and news applications team started to emerge, often working with, but not necessarily integrated with, a computer-assisted reporting team.
Fast-forward a few years, and everyone and their mother is asking if they should learn to code, too or complaining that they feel like they need to code and it’s too hard. Yet, let’s look at the people who actually are doing the programming journalism, hacker journalism, whatever.
Let’s analyze.  What are we doing? I see a lot of sidecars. “Here’s a story, to explore more…” or “Here’s a story…to find out the nearest place that has this problem, and why you care…” or “Crime’s really bad..here’s a map of your nearest crimes” or “You want to know where to go on Friday night? Here’s a directory. And you can sort by places where business owners are 42-year-old men.” Okay, not so much on that last part. But are we stuck? Are we making searchable databases and directories that are nice supplements, but not essential to the news we create? Are non data-geeks as interested as we are in all the ways we make sorting and filtering available? Do people know how to use the tools we create? And why do we do it this way?
Is it because of something we started doing with Chicago Crime in 2005?  And if the answer to that question is ‘yes’, are we stuck in as much of a rut as the old-school news execs who aren’t embracing new media? How can we position ourselves so we’re not doing things just because they’re geeky and cool, or because some website should do them, but because they serve the very nature of the journalistic product we are seeking to create, and that it simply is impossible to exist in the modern news era without what all of us, and what we bring to the table?
Taking advantage of editorial freedom + coding skills
What if management gave you the freedom to combine writing, data analysis, presentation and Web development skills? What more would you do? As much as I valued the work I did at the LAT, take my Prop 19 database for example. While starting to interview for jobs, this was the main data piece I had to show as a “clip”, because other pieces weren’t published yet.
A job interviewer asks: “What’s the story here?” And I launch into my typical speech about how everyone’s interested in different components of data, because it differs geographically, and the story that matters to Person A in downtown LA doesn’t matter to Person B in Hollywood.. and I stop. Cold in my tracks. Because I’m rambling. Because there’s not a good answer. It’s a way to structure information, but I didn’t take the next step to pull a story out of the database. Sure, a story could accompany it, and deep link to a specific donation. And that’s…good. But the app itself doesn’t answer the question.
Of course, if cuts have to be made, maybe a reporter who doesn’t get the Web will get let go. But isn’t it just as likely that it could be us, management could wonder if our custom interactives and data projects based around news content (as opposed to organizing content) are worth the intensive time they take?
So then, am I talking myself out of a job? No. News apps devs are doing great work, and these pieces are useful. They get good traffic, in many cases. I fondly remember Friday meetings at the LA Times, where Ben would bring up what someone tweeted about an LAT project. Right now, people are making discoveries, because of Crime L.A.  and the Teacher Ratings database at the LAT, along with the rest of the project, just won the Phil Meyer Award from IRE today. (Congrats, guys!) And part of the teacher projects’ impact was because of the database naming every single teacher, which upset the union, and furthered lots of discussion, and gave me my first experience seeing a protest outside a building where I worked. Still hear the chants: “We give the Times an F!” Impact. But the award is also for the use of social science methods, and the analysis performed outside of the data app world. And I think the project still would have had great power relying on analysis and reporting without the database. The database wouldn’t have had power without the story. And that’s not knocking anyone. But the complete integration test has failed. No one’s fault. But could we do better?
Why are data projects and data graphics so disparate?
We’re already doing better than another part of the newsroom, and that’s the interactive Flash department. Often, they take raw data, put it into an interactive. Visually, it’s often a lot more appealing. They do well on clicks. But they take accessible info and render it inaccessible, often. No deep linking to a part that interests you in a Flash interactive. No playing with the data yourself. Less flexibility with search, often. But at least there’s more of a direction than top ten lists. Its visual nature demands more storytelling than the lists we so often rely on.  People get the trajectory, because more visuals are often employed.  And when I say visuals, while it can mean maps and graphs, there are, you know, other things.
What can we do to change things up?
If you’re still reading, thanks for staying with me. I owe you something. We’re almost to the ultimate point here, I promise. Maybe it’s time to shift the way we do database work. Not for everyone, but some of us. Just the way some of us started doing database work, while not all journalists did. For myself, that means I need to drop the “But that’s how we did it in LA” or “That’s how Matt did it in St. Pete” or “That’s how they did it at the NYT.”
At work, we talk about how people don’t necessarily say “That was a great slideshow”, but “That was a great story.” So, how can we use databases to do that? We can start by helping people navigate these databases at a standardized starting point. Not an intro video, but something…bigger. And THEN let people explore once they’re acclimated. But integrate it all into one piece.  The story IS the data-driven interactive that offers all the storytelling of Flash and all the freedom and flexibility of a Web-based app.
But throwing structured data sets online isn’t enough. Crowdsourcing maps isn’t enough. Building crime app after crime map, posting unannotated documents, throwing more stuff at people, saying the story lies in someone’s geography.. All good, but let’s do more. So when our management has to let people go, it’s not a question of getting rid of a sidecar or extra feature, but “How can we possibly get rid of someone who’s that engaging, and who’s giving people information in an informative and entertaining way?” I’m trying to figure out the solution every day, and current news apps teams are well on their way. But I just want to catch myself before I fall into solely mimicking patterns of certain data apps strategies that just seem safe. ‘Cause…they’re not.
No one is safe: Avoid complacency
When I interviewed Matt, on Jan. 31, 2010, he told me a story of finally going into the field because a professor literally grabbed him by the scruff of his neck and said, “What are you doing about computer-assisted reporting?” I remember getting goosebumps when I heard him tell it. And now, he can have that same impact on hundreds, if not thousands, of others. I’m disappointed that we didn’t make a strong enough case to keep someone like Matt in the actual news organizations, until he autonomously made the decision to leave, if that were what he wanted to do.
But here’s what I can do, what you can do. Stop yammering about it, because as he says, “Demos, not memos” (I remember.) (I was already planning this post, but in a while. However, this was a good news peg.) Keep trying. So if someone were to come up to you and say, “What are you doing about [whatever it is you do in life or journalism]?” you could give any answer but merely — “maintaining the status quo” or worse “nothing”.